
**Django Rainbow** 
--------
* * * 
`charm name: django-rainbow`

*Django Rainbow* is desinged to deploy many differnt Django projects
to cloud servers with end-users at the helm. Any Django project which resides
on a hosted repository can be deployed using this charm. The entire prossess is
automatized and allows scaling of a single project or many at the same time.
There are no packages to install on your client.  
**Uses**  
**Local copy:**
> - Create a directory for your charms e.g. */home/charms/precise*  
- cd to the charms directory above and use *charm get django-rainbow* to download this charm  
- (Optional) Edit the *config.yaml* file with any settings.  
- (Optional) Edit the *metadata.yaml* with any settings.  
- Deploy this charm using a *juju deploy --repository=. local:precise/django-rainbow*  


**Easy charm store deployment:**
>- Simply deploy this charm as a juju service with a *juju deploy django-rainbow*.

* * *
**REQUIRES:**

`charm name: stripe`  

Deployment of your projects require this simple charm.
You will need create a unique named copy of this charm for each Django project
you plan to use and deploy. There is a simple config file in the parent
directory called *config.yaml* to edit for each Django project. When both django-rainbow
and stripe are deployed using juju, all that is needed to deploy the project is a *juju add-relation* command.
This will trigger the relation-changed hook to:  
>- Pull a copy or update the project from the hosted repository.  
>- Create a new virtual host provided in the stripe config.yaml file.  
>- Parse the settings.py file and perform all necessary tasks to deploy your app.  
- - -
**Use:**  
> - Create a directory for your charms e.g. */home/charms/precise*  
- cd to the charms directory above and use *charm-get stripe* to download this charm  
- Copy and rename *stripe* charm to something relevant to a Django project.  
- Edit the *config.yaml* file with the project settings.  
- Edit the *metadata.yaml* and change the *name* field like above.  
- Deploy this charm using a *juju deploy --repository=. local:precise/stripe-your-project*  
- Add a relation with *django-rainbow* to the stripe with *juju add-relation django-rainbow stripe-your-project*  

**Make sure that when the project repository is pulled onto the server, the DocumentRoot  
directory listed in the virtual host is the base directory of the project. This may  
require changing the project repository directory stucture or virtual host settings a bit.**  
Don't forget to use a *juju expose django-rainbow* command to make it public.  
- - - 


**LIMITATIONS:**
Django Rainbow is still very new so don't expect too many options as of now.  
*1)* Currently it only supports Mercurial and Bitbucket for project code hosting.  
*2)* The only supported database is mysql.  
*3)* There is no option to remove the project code or database entries from the service unit.  
- - -

**FUTURE UPDATES:**  
*1)* There may be a way to provide the config.yaml file to Django-rainbow. This would allow one to ditch the stripe charm all-together for an even simpler set-up.
- - -

**AUTHOR:**  
Surgemcgee <RobertSteckroth@gmail.com>  
Robert Edward Steckroth II
* * * 
**LICENCE:**  

    Django Rainbow is a charm written for Juju
    Copyright (C) 2012  Robert Edward Steckroth II

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see [http://www.gnu.org/licenses/](http://www.gnu.org/licenses/)












